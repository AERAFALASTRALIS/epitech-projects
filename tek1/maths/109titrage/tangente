#!/usr/bin/python

#
## python for 109titrage
## Made by Pierrick Gicquelais
## Login <gicque_p@epitech.eu>
## Started on March 24, 2014
## Last updated on April 1, 2014
#

########################################## IMPORT

import sys
import os
import math
import matplotlib.pyplot as plt
import binascii

########################################## INITIALIZATION

i = 2
arglen = len(sys.argv) - 1
angle = math.atan(float(sys.argv[1]) * math.pi / 180)
res = 0
xold = 0
yold = 0
xmax = 0
ymax = 0

cX = []
cY = []
dX = []
dY = []
vX = []
vY = []
tX1 = []
tY1 = []
tX2 = []
tY2 = []
tX3 = []
tY3 = []

########################################## CALCULATING

while i <= arglen:
    intput = sys.argv[i]
    rhs = intput.split(";", 1)
    x = float(rhs[0])
    y = float(rhs[1])
    cX.append(x)
    cY.append(y)
    i = i + 1
    if res >= ymax:
        xmax = x
        ymax = res
        savei = i - 3
        dX.append(x)
        dY.append(res)
    else:
        dX.append(x)
        dY.append(res)
    if (xold - x) != 0:
        res = (yold - y) / (xold - x)
    xold = x
    yold = y

resold = dY[0]
j = savei
t1 = j
while j > 0:
    res = angle - dY[j]
    if resold < res:
        t1 = j
        resold = res
    j = j - 1

resold = dY[0]
j = savei
t2 = j
while j < len(dY):
    res = angle - dY[j]
    if resold < res:
        t2 = j
        resold = res
    j = j + 1

print 't1 = ' + str(t1)
print 't2 = ' + str(t2)
print 'savei = ' + str(savei)

vX.append(xmax)
vX.append(xmax)
vY.append(0)
vY.append(14)
tX1.append(0)
tY1.append(cY[t1] - angle * cX[t1])
tX1.append(x)
tY1.append(angle * x + cY[t1] - angle * cX[t1])
tX2.append(0)
tY2.append(cY[t2] - angle * cX[t2])
tX2.append(x)
tY2.append(angle * x + cY[t2] - angle * cX[t2])
tX3.append(0)
tY3.append((t2 - t1) / 2)
tX3.append(x)
tY3.append(angle * x + ((t2 - t1) / 2))

########################################## PRINTING

print 'Volume equivalent = ' + str(xmax) + 'mL'
courbe = plt.plot(cX, cY, color='#000000', label='Titrage', linewidth=2)
tan1 = plt.plot(tX1, tY1, color='#3535ff', label='Tangente inf.', linewidth=2)
tan2 = plt.plot(tX2, tY2, color='#1080ff', label='Tangente sup.', linewidth=2)
tan3 = plt.plot(tX3, tY3, color='#00ff00', label='Tangente mid.', linewidth=2)
vol = plt.plot(vX, vY, color='#ff0000', label='Vol equi', linewidth=4)
plt.ylabel('PH')
plt.xlabel('Volume de soude en mL')
plt.axis([0, 25, 0, 14])
plt.legend()
plt.title('Titrage par PHmetrie')
plt.show()

########################################## NO ERROR DE BATARD

try:
    os.environ["DISPLAY"]
except:
    print ("Environment disabled. End of programm")
    sys.exit(-1)

#try:
#    calcFunct()
#except:
#    print 'Unexpected error .. Exiting'
#    sys.exit(-1)
